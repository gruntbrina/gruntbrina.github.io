html, body {
  height:100%;
  width:100%;
  background-image: url("https://i.guim.co.uk/img/media/937ccf0c66a062d63103587757375ea6faaac6bb/91_0_1800_1080/master/1800.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=ac3acf54de89c50d1ae86e621969ebb0");
}

/* Sections of Layout
-------------------------------------- */
/* Generic styles for demo purposes
-------------------------------------- */
.container {
  font-family: Helvetica, Arial, sans-serif;
  height:98%;
  width:98%;
}

.container > * {
  background-color: #ccc;
  padding: 1em;
}

/* Typically, you wouldn't specify a height or min-height on this, instead allowing your actual content (i.e., text, images, etc.) to dictate the height of your content area. But since this example has very minimal content, I've set a min-height to mimic a taller content area. */
.content {
  min-height: 40%;
  overflow-y: scroll;
}

/* Layout is stacked vertically by default (for narrower viewports), so give some breathing room between the sections. */
/* Select all elements where parent is a container */
.container > * {
  margin-bottom: 2%;
}

/* Now let's apply grid for wider viewports. */
@media screen and (min-width: 40em) {
  .container > * {
    margin-bottom: 0;
  }
  /* Define the grid */
  .container {
    display: grid;
    grid-template-columns: 18% 60% 18%;
    grid-gap: 2% 2%;
    grid-template-rows: 10% auto 10%;
  }
  /* Place items on the grid */
  .header {
    grid-column: 1 / span 3;
    border: 2px solid black;
    border-radius: 25px;

  }
  .sidebar {
    grid-row-end: span 2;
    background-image:url(https://one37pm.imgix.net/one37pm-editor-dev-images/s3fs-public/user-images/2020-08/fall-guys-horizontal.jpg?ch=Width,DPR&auto=compress&q=60&w=750&fit=clip&dpr=2);
    background-size:contain;
    background-repeat:repeat-y;
    border: 2px solid black;
    border-radius: 20px;
    text-align:center;
    /*https://www.w3schools.com/cssref/pr_background-image.asp*/
  }
  .content {
    grid-column: 2;
    border: 2px solid black;
    border-radius: 20px;
    font-size:10px;
    overflow:auto;
    max-width:100%;
  }

  .footer {
    grid-column: 2;
    border: 2px solid black;
    border-radius: 20px;
    background-image:linear-gradient(to right, orange, yellow, green);
    /*https://www.w3schools.com/css/css3_gradients.asp*/
    text-align: center;
  }


  .fallguywin {
    width:80%;
    height:80%;
    object-fit:cover;
    /*https://stackoverflow.com/questions/9994493/scale-image-to-fit-a-bounding-box*/
    /*Using the link above, I found made another class connected directly to the image, in a way it helped to link*/
  }

}


